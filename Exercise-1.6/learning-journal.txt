Exercise-1.1

So far I've only learned the very basics of coding with Python, but I hope to learn how I can use Python in my full time career as a web developer.


Exercise-1.2

1.  Imagine you’re having a conversation with a future colleague about whether to use the iPython Shell instead of Python’s default shell. 
    What reasons would you give to explain the benefits of using the iPython Shell over the default one?

    A: iPython has better UI features and tools that the standard Python Shell lacks, making it better for developers when testing either full scripts or code snipits. 

2.	Python has a host of different data types that allow you to store and organize information. 
    List 4 examples of data types that Python recognizes, briefly define them, and indicate whether they are scalar or non-scalar.

    A: Interger - Whole numbers both positive and negative. Scalar
       Boolean - True or False. Scalar
       Tuple - A collections of different objects. Non-scalar
       List - Store multiple data types in a single variable. Non-scalar


3.	A frequent question at job interviews for Python developers is: what is the difference between lists and tuples in Python? 
    Write down how you would respond.

    A: The main difference between lists and tuples is that while lists can be manipulated through your scripts, tuples cannot. In other words, lists are mutables
       and tuples are immutable. 

4.	In the task for this Exercise, you decided what you thought was the most suitable data structure for storing all the information for a recipe. 
    Now, imagine you’re creating a language-learning app that helps users memorize vocabulary through flashcards. 
    Users can input vocabulary words, definitions, and their category (noun, verb, etc.) into the flashcards. 
    They can then quiz themselves by flipping through the flashcards. 
    Think about the necessary data types and what would be the most suitable data structure for this language-learning app. 
    Between tuples, lists, and dictionaries, which would you choose? 
    Think about their respective advantages and limitations, 
    and where flexibility might be useful if you were to continue developing the language-learning app beyond vocabulary memorization. 

    A: As far as standard flashcards go, I would use tuples for the majority of my app to store my data. Being that I'm simply storing a word with a description
       and defintion that won't need to be updated or changed later to store additional data, tuples will be more than okay. While lists or dictionaries are more 
       dynamic, I just don't see this need for these addtional features in the current state of my app.


Exercise-1.3

1.	Imagine you’re at a job interview for a Python developer role. The interviewer says “Explain logical operators in Python”. Draft how you would respond.

    A: Logical operators are used in conditional statements to determine how the statement will be read to decide whether it is true or false. 

2.	What are functions in Python? When and why are they useful?

    A: Python functions are built in tools that let you interact and manipulate your code. They can be used to gather and update information from user manipulation
    or designate data types and structures.

3.	In the section for Exercise 1 in this Learning Journal, you were asked in question 3 to set some goals for yourself while you complete this course.  
    In preparation for your next mentor call, make some notes on how you’ve progressed towards your goals so far.

    A: Now I better understand the different data types, and how to better implement python fucntions into my code.


Exercise-1.4

1.	Why is file storage important when you’re using Python? What would happen if you didn’t store local files?

    A: If you did not store local files while using Python, you would potentially lose any temporary data that wasn't properly saved or not be able to access any data previously created. 

2.	In this Exercise you learned about the pickling process with the pickle.dump() method. 
    What are pickles? In which situations would you choose to use pickles and why? 

    A: Pickle is a module that serializes data into binary, Pickling is Python's solution to serializing data to make it capable of being stored and then 
    deserializing again to be used in your program. Pickle can be used when you don't want to serialize your objects properly because it would be too long of a process, 
    and just want to save things in a file.

3.	In Python, what function do you use to find out which directory you’re currently in? What if you wanted to change your current working directory?

    A: To find out which directory you are currently in, you can use the os. getcwd() function. You can change the current working directory with os. chdir().

4.	Imagine you’re working on a Python script and are worried there may be an error in a block of code. 
    How would you approach the situation to prevent the entire script from terminating due to an error?

    A: I would incorporate an if else staement that returns to a certain step of my script if the error occurs in that block of code. 

5.	You’re now more than halfway through Achievement 1! Take a moment to reflect on your learning in the course so far. 
    How is it going? What’s something you’re proud of so far? Is there something you’re struggling with? What do you need more practice with? 
    Feel free to use these notes to guide your next mentor call.

    A: So far, Python has been the easiest language for me to learn thorughout this course. There hasn't been much that I've struggled to use and implement so far besides 
    when and why to use the different data types that Python offers.


Exercise-1.5

1. In your own words, what is object-oriented programming? What are the benefits of OOP?

    A: OOP is the practie of defing what certain objects are and how they as the backbone of your scritps. Basically creating a framework for how your scripts functions, 
    making them easier to read and understand both for yourself, and others that might have to work on your code. 

2. What are objects and classes in Python? Come up with a real-world example to illustrate how objects and classes work.

    A: Classes are the framework for how an object is structured. A real world example of this would be to specify what defines a car: It has four wheels, a steering wheel, and an engine.
    Then using those standards create any number of different cars as long as they meet those.

3. In your own words, write brief explanations of the following OOP concepts; 100 to 200 words per method is fine.

a. Inheritance - Is the practice of a subclass or any additional classes adopting all or only specfic properties from it's parent class. This allows you to quickly create new classes without
having to write out the same properties every time. 

b. Polymorphism - Polymorphism allows the same methods to be used to accomplish multiple different goals. You can use the same method on two different objects and recieve two different results.
For instence: If you created the method "sound()" and applied it to two different objects with different speak() attributes, each one would return a different result unique to that object.

c. Operator Overloading - Operator Overloading is the practice of giving standard operators custom functions beyond their original utilty.


Exercise-1.6

1.	What are databases and what are the advantages of using them?

    A: A database is a tool that allows the storage and retrieval of data. They can offer improved security and managemant of any stored data.

2.	List 3 data types that can be used in MySQL and describe them briefly:

    A: Date - Very straightforward, date allows you to store the date and time in the proper formats.
       Varchar - Varchar is used when you want to specify the length of an unknown string of data.
       Int - Int specifies that a piece of data is a whole number. 

3.	In what situations would SQLite be a better choice than MySQL?

    A: SQLite is better in scenarios that require lightweight applications such as mobile features or smaller projects that won't need a more robust database.

4.	Think back to what you learned in the Immersion course. What do you think about the differences between JavaScript and Python as programming languages?

    A: Python focuses much more on it's readability and ease of use compared to Javascript. It aims to be a programming language that's both easy to learn and implement withing a fairly short amount of time, relative
    to JavaScript. JavaScript, however, is more robust or dynamic, offering many more tools for more complex applications. This also makes Javascript more difficult to master over Python.

5.	Now that you’re nearly at the end of Achievement 1, consider what you know about Python so far. 
    What would you say are the limitations of Python as a programming language?

    A: As mentioned in the answer to the previous question, Python would fall short for more robust projects or programming needs.


Exercise 1.7

1.	What is an Object Relational Mapper and what are the advantages of using one?

    A: An Object Relational Mapper is a tool that streamlines the creation and storage of data. It's useful for projects when you want to store predefined 
    data structures without knowing what data they will contain yet.

2.	By this point, you’ve finished creating your Recipe app. How did it go? What’s something in the app that you did well with? 
    If you were to start over, what’s something about your app that you would change or improve?

    A: I thought I formatted my UI components well as well as making my code easy to read and understand. I would however add even more error handling to make
    my code more resistant to issues or breaks in the code. 

3.	Imagine you’re at a job interview. You’re asked what experience you have creating an app using Python. 
    Taking your work for this Achievement as an example, draft how you would respond to this question.

    A: I have an adequate grasp of the core functonality of Python. I am able to use the built in functions and data types as well as create my own functions and handle possible errors
    that might arise. I've created several apps already using Python and available plugins. 
 
4.	You’ve finished Achievement 1! Before moving on to Achievement 2, take a moment to reflect on your learning in the course so far: 

    a.	What went well during this Achievement? 

        A: Python has been a very easy language to learn and ude throughout this achievement to create my projects. 

    b.	What’s something you’re proud of? 

        A: The final product for my recipe app

    c.	What was the most challenging aspect of this Achievement? 

        A: The final project with how many different functions and data types I had to impliment to make my app function properly without being error prone.

    d.	Did this Achievement meet your expectations? Did it give you the confidence to start working with your new Python skills?

        A: Yes it went very well, and I've used the knowledge I've gained from it to make other smaller projects as well to have a better grasp of the language.

    e.	What’s something you want to keep in mind to help you do your best in Achievement 2?

        A: I need to remember to comment throughout the coding process so my code is easier to understand as I go along. 